/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *
 * Author: Kristen Belanger
 *
 */
package quizprogram;

import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import javax.swing.table.DefaultTableModel;

public class SubjectWindow extends BaseWindow {

    private DefaultTableModel myTableModel;

    private MainWindow mainWindow;
    private NameSelector nameWindow;
    private QuizBuilder quizBuilderWindow;
    private QuizWindow quizWindow;
    private String subjectName;
    private QuestionType type;
    
    /**
     * Creates new form SubjectWindow
     */
    public SubjectWindow(MainWindow mainWindow, String subjectName, QuestionType type) {
        super();
        initComponents();
        
        this.mainWindow = mainWindow;
        this.type = type;
        quizBuilderWindow = new QuizBuilder(subjectName, this.type);
        quizBuilderWindow.setSubjectWindow(this);
        
        nameWindow = new NameSelector(quizBuilderWindow);
        
        this.subjectName = subjectName;
        subjectNameLabel.setText(subjectName);
        
        myTableModel = (DefaultTableModel) quizzesTable.getModel();

               // http://stackoverflow.com/questions/11606852/change-background-color-of-jtable
        jScrollPane1.getViewport().setBackground(Color.white);
       // http://stackoverflow.com/questions/4408644/how-can-i-change-the-font-of-a-jtables-header
        quizzesTable.getTableHeader().setFont(new Font("Century Gothic", Font.BOLD, 14));
        
        refreshTable();
        setVisible(false);
        
        
    }

    public void refreshTable() {
        // for every quiz add a row to the table
        Subject subject = dataHandler.getSubjectWithName(subjectName);
        if (null != subject) {
            // Remove all rows in table model before refreshing the quizzes
            // http://stackoverflow.com/questions/10413977/javaremoving-all-the-rows-of-defaulttablemodel
            myTableModel.setRowCount(0);
            
            for (Quiz quiz: subject.getQuizzes().values()) {
                myTableModel.addRow(new Object[]{quiz.getName(), toPercent(quiz.getAverageScore()), toPercent(quiz.getLastScore()), quiz.getTimesTaken()});
            }
        }
    }
    
    // reference for converting value to formatted percent string
    // http://stackoverflow.com/questions/26954443/how-do-i-format-my-percent-variable-to-2-decimal-places
    public static String toPercent(float val) {
        DecimalFormat df = new DecimalFormat("##.##%");
        return df.format(val);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addQuizButton = new javax.swing.JButton();
        questionAndAnswers = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        quizzesTable = new javax.swing.JTable();
        takeQuizButton = new javax.swing.JButton();
        subjectLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        subjectNameLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addQuizButton.setBackground(new java.awt.Color(51, 51, 255));
        addQuizButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        addQuizButton.setForeground(new java.awt.Color(255, 255, 51));
        addQuizButton.setText("Add Quiz");
        addQuizButton.setToolTipText("");
        addQuizButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQuizButtonActionPerformed(evt);
            }
        });

        quizzesTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        quizzesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Quiz", "Average Score", "Recent Score", "Times Taken"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(quizzesTable);
        if (quizzesTable.getColumnModel().getColumnCount() > 0) {
            quizzesTable.getColumnModel().getColumn(0).setResizable(false);
            quizzesTable.getColumnModel().getColumn(1).setResizable(false);
            quizzesTable.getColumnModel().getColumn(2).setResizable(false);
            quizzesTable.getColumnModel().getColumn(3).setResizable(false);
        }

        takeQuizButton.setBackground(new java.awt.Color(51, 51, 255));
        takeQuizButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        takeQuizButton.setForeground(new java.awt.Color(255, 255, 51));
        takeQuizButton.setText("Take Quiz");
        takeQuizButton.setToolTipText("");
        takeQuizButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeQuizButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(51, 51, 255));
        backButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 51));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        subjectNameLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N

        deleteButton.setBackground(new java.awt.Color(51, 51, 255));
        deleteButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 51));
        deleteButton.setText("Delete Quiz");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(addQuizButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(takeQuizButton)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(subjectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectLabel)
                .addGap(192, 192, 192)
                .addComponent(questionAndAnswers)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(subjectLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(questionAndAnswers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addQuizButton)
                    .addComponent(takeQuizButton)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addQuizButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQuizButtonActionPerformed
        // TODO add your handling code here:
        nameWindow.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addQuizButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        mainWindow.refreshTable();
        mainWindow.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void takeQuizButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeQuizButtonActionPerformed
        // TODO add your handling code here:
        // http://stackoverflow.com/questions/29345792/java-jtable-getting-the-data-of-the-selected-row
        int column = 0;
        int row = quizzesTable.getSelectedRow();
        if (row != -1) {
            String quizName = quizzesTable.getModel().getValueAt(row, column).toString();

            quizWindow = new QuizWindow(this, subjectName, quizName);
            quizWindow.setVisible(true);
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_takeQuizButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // http://stackoverflow.com/questions/29345792/java-jtable-getting-the-data-of-the-selected-row
        int column = 0;
        int row = quizzesTable.getSelectedRow();
        if (row != -1) {
            String quizName = quizzesTable.getModel().getValueAt(row, column).toString();

            dataHandler.getSubjectWithName(subjectName).deleteQuizWithName(quizName);
            refreshTable();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addQuizButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel questionAndAnswers;
    private javax.swing.JTable quizzesTable;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JLabel subjectNameLabel;
    private javax.swing.JButton takeQuizButton;
    // End of variables declaration//GEN-END:variables
}
