/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *
 * Author: Kristen Belanger
 *
 */
package quizprogram;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.TargetDataLine;
import javax.sound.sampled.UnsupportedAudioFileException;
import org.mp3transform.Decoder;
import quizprogram.DataHandler;
import quizprogram.Question;
import quizprogram.Quiz;

/**
 *
 * @author dianebelanger
 */
public class QuizBuilder extends BaseWindow {

    private SubjectWindow subjectWindow;
    private Quiz quiz;
    private int questionNumber = 1;
    private String selectedName;
    private String subjectName;
    private QuestionType type;
    
    private Recorder recorder;
    private Thread recordingThread;
    /**
     * Creates new form QuizBuilder
     */
    public QuizBuilder(String subjectName, QuestionType type) {
        super();
        initComponents();
        this.subjectName = subjectName;
        this.type = type;
        quiz = new Quiz(this.type);
        setupElements();
        setVisible(false);
    }
    
    private void setupElements() {
        showCorrectElements();
        resetBetweenQuestions();
    }
    
    private void showCorrectElements() {
        if (type.equals(QuestionType.SPELLING)) {
            questionLabel.setVisible(false);
            questionTextField.setVisible(false);
            answerLabel.setVisible(true);
            answerTextField.setVisible(true);
            doneButton.setVisible(true);
            recordButton.setVisible(true);
            playButton.setVisible(true);
            pauseButton.setVisible(true);
        } else {
            questionLabel.setVisible(true);
            questionTextField.setVisible(true);
            answerLabel.setVisible(true);
            answerTextField.setVisible(true);
            doneButton.setVisible(true);
            recordButton.setVisible(false);
            playButton.setVisible(false);
            pauseButton.setVisible(false);
        }
    }

    private void resetBetweenQuestions() {
        if (type.equals(QuestionType.SPELLING)) {
            recorder = new Recorder();
            
            // define the recording thread. This doesnt actually start recording until we do thread.start()
            recordingThread = new Thread(new Runnable() {
                public void run() {
                    recorder.start(getWavFileName());
                }
            });

        } else {
            questionTextField.setText("");
            answerTextField.setText("");
        } 
    }
    
    public void setSelectedName(String name) {
        selectedName = name;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionLabel = new javax.swing.JLabel();
        addQuestionButton = new javax.swing.JButton();
        questionTextField = new javax.swing.JTextField();
        answerLabel = new javax.swing.JLabel();
        answerTextField = new javax.swing.JTextField();
        doneButton = new javax.swing.JButton();
        recordButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        questionLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        questionLabel.setText("Question:");

        addQuestionButton.setBackground(new java.awt.Color(51, 51, 255));
        addQuestionButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        addQuestionButton.setForeground(new java.awt.Color(255, 255, 51));
        addQuestionButton.setText("Add Question");
        addQuestionButton.setToolTipText("");
        addQuestionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQuestionButtonActionPerformed(evt);
            }
        });

        questionTextField.setToolTipText("");

        answerLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        answerLabel.setText("Answer:");

        answerTextField.setToolTipText("");

        doneButton.setBackground(new java.awt.Color(51, 51, 255));
        doneButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        doneButton.setForeground(new java.awt.Color(255, 255, 51));
        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        recordButton.setBackground(new java.awt.Color(51, 51, 255));
        recordButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        recordButton.setForeground(new java.awt.Color(255, 255, 51));
        recordButton.setText("Record");
        recordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordButtonActionPerformed(evt);
            }
        });

        pauseButton.setBackground(new java.awt.Color(51, 51, 255));
        pauseButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        pauseButton.setForeground(new java.awt.Color(255, 255, 51));
        pauseButton.setText("Stop Recording");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        playButton.setBackground(new java.awt.Color(51, 51, 255));
        playButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        playButton.setForeground(new java.awt.Color(255, 255, 51));
        playButton.setText("Play");
        playButton.setToolTipText("");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addQuestionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doneButton)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(recordButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pauseButton)
                        .addGap(18, 18, 18)
                        .addComponent(playButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(questionLabel)
                            .addComponent(answerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(answerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(questionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(questionLabel))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recordButton)
                    .addComponent(pauseButton)
                    .addComponent(playButton))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addQuestionButton)
                    .addComponent(doneButton))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addQuestionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQuestionButtonActionPerformed
        String questionText = questionTextField.getText();
        if (QuestionType.SPELLING.equals(this.type)) {
            questionText = getWavFileName();
        }
        quiz.addQuestion(new Question(questionNumber, questionText, answerTextField.getText(), this.type));
        questionNumber++;
        questionTextField.setText("");
        answerTextField.setText("");
    }//GEN-LAST:event_addQuestionButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        quiz.setName(selectedName);
        String questionText = questionTextField.getText();
        if (QuestionType.SPELLING.equals(this.type)) {
            questionText = getWavFileName();
        }
        quiz.addQuestion(new Question(questionNumber, questionText, answerTextField.getText(), this.type));
        questionNumber++;
        questionTextField.setText("");
        answerTextField.setText("");

        dataHandler.getSubjectWithName(subjectName).addQuiz(quiz);
        subjectWindow.refreshTable();
        subjectWindow.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_doneButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        if (null != recorder) {
            recorder.finish();
        }
    
        // http://stackoverflow.com/questions/671049/how-do-you-kill-a-thread-in-java
        if (null != recordingThread) {
            recordingThread.stop();
        }
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void recordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordButtonActionPerformed
        resetBetweenQuestions();
        recordingThread.start();
    }//GEN-LAST:event_recordButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        recorder.playWavFile(getWavFileName());
    }//GEN-LAST:event_playButtonActionPerformed

    public void setSubjectWindow(SubjectWindow subjectWindow) {
        this.subjectWindow = subjectWindow;
    }
    
    public void setDataHandler(DataHandler dataHandler) {
        this.dataHandler = dataHandler;
    }
    
    private String getWavFileName() {
        return selectedName + "_" + questionNumber + ".wav";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addQuestionButton;
    private javax.swing.JLabel answerLabel;
    private javax.swing.JTextField answerTextField;
    private javax.swing.JButton doneButton;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JTextField questionTextField;
    private javax.swing.JButton recordButton;
    // End of variables declaration//GEN-END:variables
}
